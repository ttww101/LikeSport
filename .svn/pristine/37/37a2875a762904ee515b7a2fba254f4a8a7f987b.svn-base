//
//  CommentController.m
//  LikeSport
//
//  Created by 罗剑玉 on 16/7/9.
//  Copyright © 2016年 swordfish. All rights reserved.
//

#import "CommentController.h"
#import "CommentCell.h"
#import "LSLikeSportTool.h"
#import "Comment.h"
#import "CustomTextField.h"

@interface CommentController ()<UITableViewDelegate, UITableViewDataSource,UITextFieldDelegate>

@property (nonatomic, weak)UITableView *tableView;
@property (nonatomic, strong) NSMutableArray<CommentResult *> *allData;
@property (weak, nonatomic) UIView *textView;
@property (weak, nonatomic) UITextField *textField;
@property (weak, nonatomic) UIButton *sendBtn;
@property (weak, nonatomic) MBProgressHUD *hud;
@property (nonatomic, assign) NSInteger replyid;


@end

@implementation CommentController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    [self setupTableView];

    [self setData];

    [self setTextField];
    // cell高度自动调整
    self.tableView.estimatedRowHeight = 65;
    self.tableView.rowHeight = UITableViewAutomaticDimension;
    
    //增加监听，当键盘出现或改变时收出消息
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(keyboardWillShow:)
                                                 name:UIKeyboardWillShowNotification
                                               object:nil];
    //增加监听，当键退出时收出消息
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(keyboardWillHide:)
                                                 name:UIKeyboardWillHideNotification
                                               object:nil];
    

    UITapGestureRecognizer *tapGestureRecognizer = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(dismissKeyboard)];
    //设置成NO表示当前控件响应后会传播到其他控件上，默认为YES。
    tapGestureRecognizer.cancelsTouchesInView = NO;
    //将触摸事件添加到当前view
    [self.view addGestureRecognizer:tapGestureRecognizer];
 
//    self.view.backgroundColor = [UIColor groupTableViewBackgroundColor];
}



-(void)dismissKeyboard{
    [_textField resignFirstResponder];
}




//当键盘出现或改变时调用
- (void)keyboardWillShow:(NSNotification *)aNotification
{

    //获取键盘的高度
    NSDictionary *userInfo = [aNotification userInfo];
    NSValue *aValue = [userInfo objectForKey:UIKeyboardFrameEndUserInfoKey];
    CGRect keyboardRect = [aValue CGRectValue];
    int height = keyboardRect.size.height;
//    if (height>0) {
//        CZCover *cover = [CZCover show];
//        cover.dimBackground = YES;
//        cover.delegate = self;
//    }
    _textView.transform = CGAffineTransformMakeTranslation(0, -height);

}

//当键退出时调用
- (void)keyboardWillHide:(NSNotification *)aNotification
{
    _textView.transform = CGAffineTransformIdentity;

}

- (void)setData {
    [LSLikeSportTool getCommentType:_type withMatchID:_matchID withCompleted:^(id result) {
        Comment *last = [Comment mj_objectWithKeyValues:result];
        if (last.ret_code == 0) {
            _allData = [last.result mutableCopy];
            [_allData mutableCopy];
            dispatch_async(dispatch_get_main_queue(), ^{
                [self.tableView reloadData];
                //            NSIndexPath *lastPath = [NSIndexPath indexPathForRow:self.allData.count - 1 inSection:0];
                //            [self.tableView scrollToRowAtIndexPath:lastPath atScrollPosition:UITableViewScrollPositionBottom animated:YES];
            });
        }
        
    } failure:^(NSError *error) {
        
    }];
}

- (void)setTextField {
    UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, kSceenHeight - 178, kSceenWidth, 35)];
//    UIView *view = [[UIView alloc] init];
//    view.frame = CGRectMake(0, kSceenHeight - 35, kSceenWidth, 35);
//    view.frame = CGRectMake(0, 0, 120, 120);
    view.backgroundColor = LSBlue;

    UITextField *textField = [[CustomTextField alloc] initWithFrame:CGRectMake(5, 5, kSceenWidth-50, 25)];
    textField.placeholder = NSLocalizedStringFromTable(@"Say something!", @"InfoPlist", nil);
    textField.backgroundColor = [UIColor whiteColor];
    textField.layer.cornerRadius = 10;
    [textField addTarget:self action:@selector(textFieldDidChange:) forControlEvents:UIControlEventEditingChanged];
    [view addSubview:textField];
    textField.delegate = self;
    textField.returnKeyType = UIReturnKeySend;
    _textField = textField;
    
    
    UIButton *sendBtn = [[UIButton alloc] initWithFrame:CGRectMake(kSceenWidth - 45, 5, 40, 25)];
    [sendBtn setTitle:NSLocalizedStringFromTable(@"Send", @"InfoPlist", nil) forState:UIControlStateNormal];
    [sendBtn addTarget:self action:@selector(didClickedSendBtn) forControlEvents:UIControlEventTouchUpInside];
    sendBtn.titleLabel.font = [UIFont systemFontOfSize:13];
    [view addSubview:sendBtn];
    _sendBtn = sendBtn;
    
    [self.view addSubview:view];
    
    self.textView = view;
}

- (void)textFieldDidChange:(UITextField *)textField
{
    if (textField == self.textField) {
        if (textField.text.length > 200) {
            textField.text = [textField.text substringToIndex:200];
        }
    }
}

- (void)textFieldDidBeginEditing:(UITextField *)textField {
    _sendBtn.userInteractionEnabled = YES;
}

#pragma mark - 开始拖拽的时候调用
- (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView
{
    [self.view endEditing:YES];
}

- (void)didClickedSendBtn{
    
    
//    NSLog(@"评论内容%@",_textField.text);
    if (_textField.text.length == 0) {
        MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
        [hud hideAnimated:YES afterDelay:1.f];
        hud.mode = MBProgressHUDModeText;
        hud.offset = CGPointMake(0.f, -120);
        hud.label.text = NSLocalizedStringFromTable(@"Input can't be empty", @"InfoPlist", nil);
    } else {
        [LSLikeSportTool commentWithType:_type withMid:_matchID withReplyId:_replyid withContent:_textField.text withCompleted:^(id result) {
            int ret_code = [[result objectForKey:@"ret_code"] integerValue];
            if (ret_code == 0) {
//                hud.label.text = @"评论成功";
                _textField.text = nil;
                //        _textField.placeholder = @"Please comment on civilization!";
                [self setData];
                [_textField resignFirstResponder];
                _textView.transform = CGAffineTransformMakeTranslation(0,0);
            }
            
        } failure:^(NSError *error) {
//            hud.label.text = @"评论失败";
        }];
    }
}

- (BOOL)textFieldShouldReturn:(UITextField *)textField {
    
    
    if (_textField.text.length == 0) {
        MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
        [hud hideAnimated:YES afterDelay:1.f];
        hud.mode = MBProgressHUDModeText;
        hud.offset = CGPointMake(0.f, -120);
        hud.label.text = NSLocalizedStringFromTable(@"Input can't be empty", @"InfoPlist", nil);
    } else {
        [textField resignFirstResponder];
        [self didClickedSendBtn];
    }
    return YES;
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - Table view  delegate & data source

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
//    NSArray *detail = _matchDetail[section];
//    if (_type == 0) {
//        return detail.count;
//    } else if (_type == 1) {
//        return _basketballData.count;
//    }
    return _allData.count;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
//    if (_type == 0) {
//        return _matchDetail.count;
//    }
    
    return 1;
}

//- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
//    return 65;
//}

-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
//    if (_type == 0) {
//        return 25;
//    }
    return 0.1;
}
- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return 0.1;
}

//- (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section
//{
//    return @"技术统计";
//}
- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
//    if (_type == 0) {
//        UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(0,0,kSceenWidth,15)];
//        label.text = _sectionTitle[section];
//        
//        label.font = [UIFont systemFontOfSize:14];
//        label.textAlignment = NSTextAlignmentCenter;
//        label.textColor = [UIColor whiteColor];
//        label.backgroundColor = LSBlue;
//        return label;
//    }
    return nil;
}

//- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
//{
//    UIView *myView = [[UIView alloc] init];
//    myView.backgroundColor = [UIColor grayColor];
//    UILabel *titleLabel = [[UILabel alloc] initWithFrame:CGRectMake(30, 0, 200, 22)];
//    titleLabel.textColor=[UIColor whiteColor];
//    titleLabel.backgroundColor = [UIColor clearColor];
//    titleLabel.text = @"adasdsa";
//    [myView addSubview:titleLabel];
//
//    return myView;
//}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    CommentCell *cell = [CommentCell cellWithTableView:tableView];

    CommentResult *comment = _allData[indexPath.row];
    cell.commentResult = comment;
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    cell.deleteBlock = ^(NSInteger commentId) {
        
        [LSLikeSportTool deleteCommentWithId:commentId withCompleted:^(id result) {
            int ret_code = [[result objectForKey:@"ret_code"] integerValue];
            if (ret_code == 0) {
                MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
                [hud hideAnimated:YES afterDelay:1.f];
                hud.mode = MBProgressHUDModeText;
                hud.offset = CGPointMake(0.f, -120);

                hud.label.text = NSLocalizedStringFromTable(@"Delete comments success", @"InfoPlist", nil);
                [self setData];
            }
            
        } failure:^(NSError *error) {
            MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
            [hud hideAnimated:YES afterDelay:1.f];
            hud.mode = MBProgressHUDModeText;
            hud.offset = CGPointMake(0.f, -120);
            hud.label.text = NSLocalizedStringFromTable(@"Delete comments failure", @"InfoPlist", nil);;
        }];
    };
    
    cell.replaceBlock = ^(NSInteger replyid,NSString *nickName){
        _replyid = replyid;
        _textField.placeholder = [NSString stringWithFormat:@"@%@",nickName];
        [_textField becomeFirstResponder];
    };
    return cell;
    
}

- (void)setupTableView {
    [self.tableView registerNib:[UINib nibWithNibName:@"CommentCell" bundle:nil] forCellReuseIdentifier:@"commentCell"];
    
    self.tableView.tableFooterView = [[UIView alloc] init];
    
    dispatch_async(dispatch_get_main_queue(), ^{
        [self.tableView reloadData];
    });
}

#pragma mark private method

- (UITableView *)tableView {
    if (!_tableView) {
        UITableView *tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 30, kSceenWidth, kSceenHeight-210) style:UITableViewStylePlain];
        tableView.delegate = self;
        tableView.dataSource = self;
        //        tableView.rowHeight = 100;
        tableView.showsVerticalScrollIndicator = YES;

        //        _tableView.indicatorStyle=UIScrollViewIndicatorStyleBlack;
        
        //        UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, kSceenWidth, 200)];
        //        tableView.tableHeaderView = view;
        [self.view addSubview:tableView];
        _tableView = tableView;
    }
    return _tableView;
}

// 分割线对齐左边
-(void)viewDidLayoutSubviews
{
    if ([self.tableView respondsToSelector:@selector(setSeparatorInset:)]) {
        [self.tableView setSeparatorInset:UIEdgeInsetsMake(0,0,0,0)];
    }
    
    if ([self.tableView respondsToSelector:@selector(setLayoutMargins:)]) {
        [self.tableView setLayoutMargins:UIEdgeInsetsMake(0,0,0,0)];
    }
}

-(void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if ([cell respondsToSelector:@selector(setSeparatorInset:)]) {
        [cell setSeparatorInset:UIEdgeInsetsZero];
    }
    
    if ([cell respondsToSelector:@selector(setLayoutMargins:)]) {
        [cell setLayoutMargins:UIEdgeInsetsZero];
    }
}

- (MBProgressHUD *)hud {
    if (!_hud) {
        MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
        [hud hideAnimated:YES afterDelay:1.f];
        hud.mode = MBProgressHUDModeText;
        hud.offset = CGPointMake(0.f, -120);
        _hud = hud;
    }
    return _hud;
}

- (void)dealloc
{
    [[NSNotificationCenter defaultCenter] removeObserver:self];
}
//- (void)viewWillDisappear:(BOOL)animated
//{
//    [super viewWillDisappear:animated];
//    
//    // 隐藏导航条下边的黑线
//    [self.navigationController.navigationBar setBackgroundImage:nil forBarMetrics:UIBarMetricsDefault];
//    [self.navigationController.navigationBar setShadowImage:nil];
//}
//
//- (void)viewWillAppear:(BOOL)animated
//{
//    [super viewWillAppear:animated];
//
//    // 隐藏导航条下边的黑线
//    [self.navigationController.navigationBar setBackgroundImage:[UIImage new] forBarMetrics:UIBarMetricsDefault];
//    [self.navigationController.navigationBar setShadowImage:[UIImage new]];
//    
//    
//}
/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/
- (void)viewWillDisappear:(BOOL)animated {
    [super viewWillDisappear:animated];
}

@end
