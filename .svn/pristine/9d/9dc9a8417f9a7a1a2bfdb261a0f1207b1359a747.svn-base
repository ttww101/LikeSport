//
//  Live2ViewController.m
//  LikeSport
//
//  Created by 罗剑玉 on 16/9/21.
//  Copyright © 2016年 swordfish. All rights reserved.
//

#import "Live2ViewController.h"
#import "PlayingController.h"
#import "NoStartController.h"
#import "ResultController.h"
#import "FollowController.h"
#import "FootballDetailController.h"
#import "LSChooseController.h"
#import "SearchViewController.h"
#import "YSLContainerViewController.h"

@interface Live2ViewController ()<ChooseDelegate,YSLContainerViewControllerDelegate>

@property (nonatomic, strong) NSMutableArray *allVC;

@property (weak, nonatomic) PlayingController *playingController;
@property (weak, nonatomic) NoStartController *noStartController;
@property (weak, nonatomic) ResultController *resultController;
@property (weak, nonatomic) FollowController *followController;
@property (nonatomic, assign) NSInteger type;
@property (weak, nonatomic) UISegmentedControl *segmentedControl;
// 时间戳，超过60秒左右滑动就自动刷新
@property (nonatomic, assign) NSTimeInterval nowSp;
@property (nonatomic, assign) NSString *chooseDate;

// 当前页
@property (nonatomic, assign) NSInteger currentPage;

@property (nonatomic, assign) NSInteger chooseType; // 1为赛事筛选 2为国家筛选
@property (nonatomic, assign) NSInteger dateChooseType; // 1为日期赛事筛选 2为日期国家筛选
@property (nonatomic, assign) NSInteger ballChoose; // 类别筛选
@property (nonatomic, assign) NSInteger dateBallChoose; // 日期筛选
@property (nonatomic, strong) NSMutableArray *selectArray; // 当前日筛选选中行
@property (nonatomic, strong) NSMutableArray *dateChooseSource; // 日期筛选数组
@property (nonatomic, strong) NSMutableArray *chooseSource;
@property (nonatomic, assign) NSInteger today; // 当前日，用来判断日期菜单是否有变化

@property (nonatomic, strong) YSLContainerViewController *segmentView;

@end

@implementation Live2ViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    [self initSegmentedControl];
    
    // Do any additional setup after loading the view.
    [self initHorizontalMenu];
    
    self.automaticallyAdjustsScrollViewInsets = NO;
    
    [self setChooseBtn];
    
    NSTimeInterval time = [[NSDate date] timeIntervalSince1970];
    _nowSp = time;
    // 应用开始活动时自动刷新
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(applicationDidBecomeActive) name:UIApplicationDidBecomeActiveNotification object:nil];
    
    //    NSLog(@"today=%i",[self getToday]);
    _today = [self getToday];
    
    // 增加搜索按钮
    [self addRightBtnWithImgName:@"search" andSelector:@selector(search)];
}

#pragma mark -- 搜索
- (void)search{
    //    UIControl * control = [[UIControl alloc]initWithFrame:CGRectMake(0, 0, self.view.frame.size.width, self.view.frame.size.height)];
    //    [control addTarget:self action:@selector(hide) forControlEvents:UIControlEventTouchUpInside];
    //    [self.view addSubview:control];
    //    UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"标题" message:@"这个是UIAlertController的默认样式" preferredStyle:UIAlertControllerStyleAlert];
    //    UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:nil];
    //    UIAlertAction *okAction = [UIAlertAction actionWithTitle:@"好的" style:UIAlertActionStyleDefault handler:nil];
    //    [alertController addAction:cancelAction];
    //    [alertController addAction:okAction];
    //    [self presentViewController:alertController animated:YES completion:nil];
    
    
    SearchViewController *searchVC = [[SearchViewController alloc] init];
    searchVC.type = _type;
    searchVC.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:searchVC animated:NO];
    //    [self presentViewController:searchVC animated:NO completion:nil];
}



#pragma mark -- 获取当前日
-(NSInteger)getToday {
    NSDate *now = [NSDate date];
    NSCalendar *calendar = [NSCalendar currentCalendar];
    NSUInteger unitFlags = NSYearCalendarUnit | NSMonthCalendarUnit | NSDayCalendarUnit | NSHourCalendarUnit | NSMinuteCalendarUnit | NSSecondCalendarUnit;
    NSDateComponents *dateComponent = [calendar components:unitFlags fromDate:now];
    return [dateComponent day];
}

#pragma mark -- 后台切换回前台
- (void)applicationDidBecomeActive {
    if (_today != [self getToday]) {
        [_noStartController.horizontalMenuView removeFromSuperview];
//        [_noStartController.horizontalMenuView removeAllSubviews];
        [_noStartController setHorizontalMenuView];
        [_resultController.horizontalMenuView removeFromSuperview];
        [_resultController setHorizontalMenuView];
        _today = [self getToday];
    }
    
    NSTimeInterval time = [[NSDate date] timeIntervalSince1970];
    //    if (time - _nowSp > 90) {
    [_playingController initWithType:_type];
    [_noStartController initWithType:_type];
    [_resultController initWithType:_type];
    [_followController initWithType:_type];
    _nowSp = time;
    //    }
}

#pragma mark -- 筛选
- (void) setChooseBtn {
    UIButton *someButton = [[UIButton alloc] initWithFrame:CGRectMake(-10, 0, 30, 30)];
    [someButton setImage:[UIImage imageNamed:@"choose"] forState:UIControlStateNormal];
    //    someButton.imageEdgeInsets = UIEdgeInsetsMake(-5, -20, 0, 20);
    //    [someButton setImage:[UIImage imageNamed:@"choose-2"] forState:UIControlStateSelected];
    [someButton addTarget:self action:@selector(didClickedChooseButton) forControlEvents:UIControlEventTouchUpInside];
    //    [someButton setShowsTouchWhenHighlighted:YES];
    UIBarButtonItem *mailbutton =[[UIBarButtonItem alloc] initWithCustomView:someButton];
    self.navigationItem.leftBarButtonItem = mailbutton;
    //    [self addRightBtnWithImgName:@"chooseBtn" andSelector:@selector(didClickedChooseButton)];
}

- (void)didClickedChooseButton {
    NSLog(@"currentPage=%i,chooseDate=%@",_currentPage,[_resultController getChooseDate]);
    LSChooseController *chooseVc = [[LSChooseController alloc] init];
    if (_type == 0 || _type == 1) {
        if (_currentPage == 1 && [[_allVC[1] getChooseDate] intValue] != 0) {
            _chooseDate = [_allVC[1] getChooseDate];
            chooseVc.MDay = _chooseDate;
        } else if (_currentPage == 2 && [[_allVC[2] getChooseDate] intValue] != 0) {
            _chooseDate = [_allVC[2] getChooseDate];
            chooseVc.MDay = _chooseDate;
        } else {
            if (_ballChoose == _type && _selectArray.count > 0) {
                chooseVc.chooseArray = _selectArray;
                chooseVc.isMatch = _chooseType;
            }
            chooseVc.chooseType = _chooseType;
            
            _chooseDate = @"0";
        }
        chooseVc.type = _type;
        //        chooseVc.MDay = _chooseDate;
        chooseVc.delegate = self;
        [chooseVc setHidesBottomBarWhenPushed:YES];
        [self.navigationController pushViewController:chooseVc animated:NO];
    }
}

// 筛选后返回的数组
- (void)chooseArray:(NSArray *)array chooseType:(NSInteger)chooseType type:(NSInteger)type selectIndex:(NSArray *)index{
    //    if (type != _type || chooseType == 0) {
    //        <#statements#>
    //    }
    if ([_chooseDate intValue] == 0 && chooseType != 0) { // chooseType不为0说明有筛选
        
        [self setChooseBtnChangeWithState:YES];
    } else if (type != _type || chooseType == 0) {
        [self setChooseBtnChangeWithState:NO];
        _chooseType = chooseType;
        //        [self initDataSource];
    }
    
    _selectArray = [index mutableCopy];
    
    
    //    [self initDataSource];
    if (_currentPage == 1 && [_chooseDate intValue] != 0 && chooseType != 0) {
        //        _dateBallChoose = type;
        //        _dateChooseType = chooseType;
        //        _dateChooseSource = [array mutableCopy];
        //        [self conditionChooseArray:_dateChooseSource withPage:1];
        [_noStartController conditionDateChooseArray:array withChooseType:chooseType];
        
    } else if (_currentPage == 2 && [_chooseDate intValue] != 0 && chooseType != 0) {
        //        _dateBallChoose = type;
        //        _dateChooseType = chooseType;
        //        _dateChooseSource = [array mutableCopy];
        NSLog(@"筛选");
        [_resultController conditionDateChooseArray:array withChooseType:chooseType];
        //        [self conditionChooseArray:_dateChooseSource withPage:2];
    } else if (chooseType != 0) {
        _selectArray = [index mutableCopy];
        _chooseType = chooseType;
        _ballChoose = type;
        //        _chooseType = chooseType;
        //        _ballChoose = type;
        //        _chooseSource = [array mutableCopy];
        [_playingController conditionTadayArray:array withChooseType:chooseType];
        [_noStartController conditionTadayArray:array withChooseType:chooseType];
        [_resultController conditionTadayArray:array withChooseType:chooseType];
        switch (_type) {
            case 0:
                //                [self conditionArray:_chooseSource withData:_footballSource];
                break;
            case 1:
                //                [self conditionArray:_chooseSource withData:_basketballSource];
                break;
                
            default:
                break;
        }
    } else {
        [_playingController selectTodayAllData];
        [_noStartController selectTodayAllData];
        [_resultController selectTodayAllData];
    }
    
}

#pragma mark -- 设置筛选小红点
- (void)setChooseBtnChangeWithState:(BOOL)state {
    UIButton *someButton = [[UIButton alloc] initWithFrame:CGRectMake(0, 0, 30, 30)];
    if (state) {
        [someButton setImage:[UIImage imageNamed:@"choose-2"] forState:UIControlStateNormal];
    } else {
        [someButton setImage:[UIImage imageNamed:@"choose"] forState:UIControlStateNormal];
    }
    [someButton addTarget:self action:@selector(didClickedChooseButton) forControlEvents:UIControlEventTouchUpInside];
    //    [someButton setShowsTouchWhenHighlighted:YES];
    UIBarButtonItem *mailbutton =[[UIBarButtonItem alloc] initWithCustomView:someButton];
    self.navigationItem.leftBarButtonItem = mailbutton;
    //    if (_type == 2) {
    //        self.navigationItem.rightBarButtonItem.customView.hidden = YES;
    //    }
    //    if (state) {
    //        [self addRightBtnWithImgName:@"chooseSel" andSelector:@selector(didClickedChooseButton)];
    //    } else {
    //        [self addRightBtnWithImgName:@"chooseBtn" andSelector:@selector(didClickedChooseButton)];
    //    }
    
}


#pragma mark -- 初始化顶部选项卡
- (void)initSegmentedControl
{
    UIImage *image1 = [UIImage imageNamed:@"football"];
    UIImage *image2 = [UIImage imageNamed:@"basketball"];
    UIImage *image3 = [UIImage imageNamed:@"tennisball"];
    
    NSArray *segmentedData = [[NSArray alloc] initWithObjects:image1,image2,image3, nil];
    UISegmentedControl *segmentedControl = [[UISegmentedControl alloc] initWithItems:segmentedData];
    segmentedControl.frame = CGRectMake(10, (kSceenWidth-90)/2, 90, 30.0);
    
    //设置按下按钮时的颜色
    segmentedControl.tintColor = [UIColor whiteColor];
    
    segmentedControl.selectedSegmentIndex = 0;//默认选中的按钮索引
    [segmentedControl setImage:[[UIImage imageNamed:@"football"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal] forSegmentAtIndex:0];
    
    //设置分段控件点击相应事件
    [segmentedControl addTarget:self action:@selector(dosomethingInSegment:) forControlEvents:UIControlEventValueChanged];
    [self.navigationItem setTitleView:segmentedControl];
    
    self.segmentedControl = segmentedControl;
    
}

#pragma mark -- 初始化所有数据
- (void) initDataSource {
    //    for (int i = 0; i < 4; i++) {
    //        [_allVC[i] initWithType:_type];
    //    }
    [_playingController initWithType:_type];
    [_noStartController initWithType:_type];
    [_resultController initWithType:_type];
    [_followController initWithType:_type];
}

- (void)dosomethingInSegment:(UISegmentedControl *)seg
{
    NSInteger index = seg.selectedSegmentIndex;
    
    // 切换类别时回到正在比赛中
    
    switch (index) {
        case 0:
            _type = 0;
            
            [seg setImage:[[UIImage imageNamed:@"football"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal] forSegmentAtIndex:0];
            [seg setImage:[UIImage imageNamed:@"basketball"] forSegmentAtIndex:1];
            [seg setImage:[UIImage imageNamed:@"tennisball"] forSegmentAtIndex:2];
            [self initDataSource];
            [_segmentView scrollMenuViewSelectedIndex:0];
            self.navigationItem.rightBarButtonItem.customView.hidden = NO;
            // 筛选亮红点
            if (_chooseType != 0 && _ballChoose == _type) {
                [self setChooseBtnChangeWithState:YES];
            } else if (_ballChoose != _type) {
                [self setChooseBtnChangeWithState:NO];
            }
            
            break;
            
        case 1:
            _type = 1;
            
            [seg setImage:[UIImage imageNamed:@"football"] forSegmentAtIndex:0];
            [seg setImage:[[UIImage imageNamed:@"basketball2"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal] forSegmentAtIndex:1];
            [seg setImage:[UIImage imageNamed:@"tennisball"] forSegmentAtIndex:2];
            [self initDataSource];
            [_segmentView scrollMenuViewSelectedIndex:0];
            self.navigationItem.rightBarButtonItem.customView.hidden = NO;
            // 筛选亮红点
            if (_chooseType != 0 && _ballChoose == _type) {
                [self setChooseBtnChangeWithState:YES];
            } else if (_ballChoose != _type) {
                [self setChooseBtnChangeWithState:NO];
            }
            
            break;
            
        case 2:
            _type = 2;
            
            [seg setImage:[UIImage imageNamed:@"football"] forSegmentAtIndex:0];
            [seg setImage:[UIImage imageNamed:@"basketball"] forSegmentAtIndex:1];
            [seg setImage:[[UIImage imageNamed:@"tennisball2"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal] forSegmentAtIndex:2];
            [self initDataSource];
            
            [_segmentView scrollMenuViewSelectedIndex:0];
            self.navigationItem.rightBarButtonItem.customView.hidden = YES;
            
            break;
            
        default:
            break;
    }
    
    
    
}

#pragma mark -- 比赛状态选项卡
- (void)initHorizontalMenu {
    
    self.view.backgroundColor = [UIColor whiteColor];
//    _allVC = [NSMutableArray array];
    PlayingController *playVC = [[PlayingController alloc]init];
    playVC.type = _type;
    playVC.detailBlock = ^(NSInteger type,NSInteger matchID,NSInteger state){
        FootballDetailController *footballDetailVc = [[FootballDetailController alloc] init];
        footballDetailVc.matchID = matchID;
        footballDetailVc.type = type;
        footballDetailVc.state = state;
        [footballDetailVc setHidesBottomBarWhenPushed:YES];
        [self.navigationController pushViewController:footballDetailVc animated:YES];
    };
    playVC.moreBlock = ^(){
        // 点击展开详情时刷新界面
//        [_segmentView refreshView];
    };
    
    //    one.matchID = _matchID;
    //    one.type = _type;
    //    one.basketResult = _basketResult;
    playVC.title = NSLocalizedStringFromTable(@"Playing", @"InfoPlist", nil);
//    [_allVC addObject:playVC];
    _playingController = playVC;
    
    NoStartController *noStartVC = [[NoStartController alloc]init];
    //    two.matchID = _matchID;
    noStartVC.type = _type;
    noStartVC.detailBlock = ^(NSInteger type,NSInteger matchID,NSInteger state){
        FootballDetailController *footballDetailVc = [[FootballDetailController alloc] init];
        footballDetailVc.matchID = matchID;
        footballDetailVc.type = type;
        footballDetailVc.state = state;
        [footballDetailVc setHidesBottomBarWhenPushed:YES];
        [self.navigationController pushViewController:footballDetailVc animated:YES];
    };
    noStartVC.dateBlock = ^(NSInteger page){
        if (page > 0 && page < 5) {
            _resultController.pageIndex = page;
            [_resultController.horizontalMenuView setBtnWithTag:page];
        } else {
            _resultController.isDatePicker = YES;
            //            _resultController.pageIndex = 5;
        }
        [_segmentView scrollMenuViewSelectedIndex:2];
    };
    
    noStartVC.title = NSLocalizedStringFromTable(@"Not Start", @"InfoPlist", nil);
//    [_allVC addObject:noStartVC];
    _noStartController = noStartVC;
    
    ResultController *resultVC = [[ResultController alloc]init];
    resultVC.type = _type;
    //    three.mid = _matchID;
    resultVC.detailBlock = ^(NSInteger type,NSInteger matchID,NSInteger state){
        FootballDetailController *footballDetailVc = [[FootballDetailController alloc] init];
        footballDetailVc.matchID = matchID;
        footballDetailVc.type = type;
        footballDetailVc.state = state;
        [footballDetailVc setHidesBottomBarWhenPushed:YES];
        [self.navigationController pushViewController:footballDetailVc animated:YES];
    };
    resultVC.dateBlock = ^(NSInteger page){
        if (page > 0 && page < 5) {
            _noStartController.pageIndex = page;
            [_noStartController.horizontalMenuView setBtnWithTag:page];
        } else {
            //            _noStartController.pageIndex = 5;
            _noStartController.isDatePicker = YES;
        }
        [_segmentView scrollMenuViewSelectedIndex:1];
    };
    
    resultVC.title = NSLocalizedStringFromTable(@"Result", @"InfoPlist", nil);
//    [_allVC addObject:resultVC];
    _resultController = resultVC;
    
    
    FollowController *followVC = [[FollowController alloc]init];
    //    four.matchID = _matchID;
    followVC.type = _type;
    followVC.detailBlock = ^(NSInteger type,NSInteger matchID,NSInteger state){
        FootballDetailController *footballDetailVc = [[FootballDetailController alloc] init];
        footballDetailVc.matchID = matchID;
        footballDetailVc.type = type;
        footballDetailVc.state = state;
        [footballDetailVc setHidesBottomBarWhenPushed:YES];
        [self.navigationController pushViewController:footballDetailVc animated:YES];
    };
    
    followVC.title = NSLocalizedStringFromTable(@"Follow", @"InfoPlist", nil);
//    [_allVC addObject:followVC];
    _followController = followVC;
    
    // ContainerView
//    float statusHeight = [[UIApplication sharedApplication] statusBarFrame].size.height;
//    float navigationHeight = self.navigationController.navigationBar.frame.size.height;
    
    YSLContainerViewController *containerVC = [[YSLContainerViewController alloc]initWithControllers:@[playVC,noStartVC,resultVC,followVC]
                                                                                        topBarHeight:0
                                                                                parentViewController:self];
    containerVC.delegate = self;
    containerVC.menuItemFont = [UIFont fontWithName:@"Futura-Medium" size:16];
    containerVC.menuBackGroudColor = LSBlue;
    containerVC.menuIndicatorColor = LSYellow;
    containerVC.menuItemTitleColor = [UIColor lightGrayColor];
    containerVC.menuItemSelectedTitleColor = [UIColor whiteColor];
    _segmentView = containerVC;
    
    [self.view addSubview:containerVC.view];

}

//左右切换视图时
- (void)whenSelectOnPager:(NSUInteger)number;
{
    // 切换选项卡调用相应控制器的视图出现方法
    UIViewController* vc = _allVC[number];
    [vc viewWillAppear:YES];
    _currentPage = number;
    if (number == 3 || _type == 2) {
        //        self.navigationItem.rightBarButtonItem = nil;
        self.navigationItem.rightBarButtonItem.customView.hidden = YES;
    } else{
        self.navigationItem.rightBarButtonItem.customView.hidden = NO;
    }
    
}



// 隐藏导航条下边的黑线
-(void)viewWillAppear:(BOOL)animated
{
    // 设置状态栏为白色
    //    [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent animated:YES];
    
    [self.navigationController.navigationBar setBackgroundImage:[UIImage new] forBarMetrics:UIBarMetricsDefault];
    [self.navigationController.navigationBar setShadowImage:[UIImage new]];
    
    NSUserDefaults *defaults =[NSUserDefaults standardUserDefaults];
    NSInteger segmentTag = [[defaults objectForKey:@"segmentTag"] intValue];
    
    if (segmentTag != 4) {
        //        [self dosomethingInSegment:(UISegmentedControl *)];
        self.segmentedControl.selectedSegmentIndex = segmentTag;
        [self dosomethingInSegment:self.segmentedControl];
        [defaults setObject:@"4" forKey:@"segmentTag"];
        [defaults synchronize];
    }
    
    [_playingController addTimer];
    [_playingController addMinuteTimer];
}

-(void)viewWillDisappear:(BOOL)animated{
    
    [self.navigationController.navigationBar setBackgroundImage:nil forBarMetrics:UIBarMetricsDefault];
    [self.navigationController.navigationBar setShadowImage:nil];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
