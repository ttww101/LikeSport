//
//  FootballDetailController.m
//  LikeSport
//
//  Created by 罗剑玉 on 16/5/17.
//  Copyright © 2016年 swordfish. All rights reserved.
//

#import "FootballDetailController.h"
#import "LSTopView.h"
#import "SMPagerTabView.h"
#import "LSLikeSportTool.h"
#import "LSFootballBase.h"
#import "UIImageView+WebCache.h"
#import "LSConstant.h"

#import "DetailController.h"
#import "LSBasketballBase.h"
#import "AnalyseController.h"
#import "WikiDetailController.h"
#import "WikiScoreController.h"
#import "CommentController.h"
#import "TeamInformationController.h"
#import "LoginViewController.h"

@interface FootballDetailController ()<SMPagerTabViewDelegate,UIAlertViewDelegate>
@property (nonatomic, strong) LSTopView *topView;
@property (nonatomic, strong) FootballBaseResult *baseInfo;
@property (nonatomic, strong) BasketResult *basketResult;

@property (nonatomic, strong) NSMutableArray *allVC;
@property (nonatomic, strong) SMPagerTabView *segmentView;
@property (weak, nonatomic) UILabel *label;
@property (nonatomic, assign) BOOL canceled;

//@property (nonatomic, weak) AnalyseController *detailController;
@property (weak, nonatomic) UIButton *followBtn;

@end

@implementation FootballDetailController

- (void)viewDidLoad {
    [super viewDidLoad];
    [self setUpNavigationTitleCenter];


    [self setFollowBtn];

    // Do any additional setup after loading the view.
    [self setUpTopView];
    [self.view addSubview:self.topView];
    
//    [self addRightBtnWithStr:@"刷新" andSelector:@selector(didRefra)];
    
    
}

//-(void) didRefra {
//    DetailController *one = [[DetailController alloc]initWithNibName:nil bundle:nil];
//    _detailController.label.hidden = !_detailController.label.hidden;
//}

- (void)doSomeWork {
    // Simulate by just waiting.
    sleep(3.);
}

- (void)setFollowBtn{
    UIButton *followBtn = [[UIButton alloc] initWithFrame:CGRectMake(0, 0, 30, 30)];
    [followBtn setImage:[UIImage imageNamed:@"follow"] forState:UIControlStateNormal];
    [followBtn setImage:[UIImage imageNamed:@"followed"] forState:UIControlStateHighlighted];
    [followBtn addTarget:self action:@selector(followMatch) forControlEvents:UIControlEventTouchUpInside];
    //    [someButton setShowsTouchWhenHighlighted:YES];
    _followBtn = followBtn;
    UIBarButtonItem *mailbutton =[[UIBarButtonItem alloc] initWithCustomView:followBtn];
    self.navigationItem.rightBarButtonItem = mailbutton;

}

// 关注按钮
- (void)followMatch{
    _followBtn.highlighted = YES;
    NSUserDefaults *defaults =[NSUserDefaults standardUserDefaults];
    NSString *token = [defaults objectForKey:@"token"];//根据键值取出token
    
    if (token.length > 0) {
        NSInteger matchid;
        NSInteger state = 0;
        if (_type == 0) {
            matchid = _baseInfo.matchtype_id;
            if (_baseInfo.is_follow_matchtype == 1) {
                state = 2;
            } else if (_baseInfo.is_follow_matchtype == 0) {
                state = 1;
            }
        } else if (_type == 1 || _type == 2) {
            matchid = _basketResult.matchtype_id;
            if (_basketResult.is_follow_matchtype == 1) {
                state = 2;
            } else if (_basketResult.is_follow_matchtype == 0) {
                state = 1;
            }
        }
        

        NSDictionary *param = @{@"mtype":[NSString stringWithFormat:@"%li",(long)_type],@"ptype":@3,@"mid":[NSString stringWithFormat:@"%li",(long)matchid],@"status":[NSString stringWithFormat:@"%li",(long)state]};
        [LSLikeSportTool followMatchWithParam:param withCompleted:^(id result) {
            if ([[result objectForKey:@"ret_code"] intValue] == 0) {
//                if (match.is_follow == 0) {
//                    match.is_follow = 1;
//                } else if (match.is_follow == 1){
//                    match.is_follow = 0;
//                }
                if (_type == 0) {
                    if (_baseInfo.is_follow_matchtype == 0) {
                        _baseInfo.is_follow_matchtype = 1;
                        _followBtn.highlighted = YES;
                    } else if (_baseInfo.is_follow_matchtype == 1) {
                        _baseInfo.is_follow_matchtype = 0;
                        _followBtn.highlighted = NO;
                    }
                } else if (_type == 1  || _type == 2) {
                    if (_basketResult.is_follow_matchtype == 0) {
                        _basketResult.is_follow_matchtype = 1;
                        _followBtn.highlighted = YES;
                    } else if (_baseInfo.is_follow_matchtype == 1) {
                        _basketResult.is_follow_matchtype = 0;
                        _followBtn.highlighted = NO;
                    }
                }
            }
//            else {
////                if (match.is_follow == 0) {
////                    match.is_follow = 1;
////                } else if (match.is_follow == 1){
////                    match.is_follow = 0;
////                }
//                if (_type == 0) {
//                    if (_baseInfo.is_follow_matchtype == 0) {
//                        _baseInfo.is_follow_matchtype = 1;
//                    } else if (_baseInfo.is_follow_matchtype == 1) {
//                        _baseInfo.is_follow_matchtype = 0;
//                    }
//                } else if (_type == 1) {
//                    if (_basketResult.is_follow_matchtype == 0) {
//                        _basketResult.is_follow_matchtype = 1;
//                    } else if (_baseInfo.is_follow_matchtype == 1) {
//                        _basketResult.is_follow_matchtype = 0;
//                    }
//                }
//            }
            dispatch_async(dispatch_get_main_queue(), ^{
//                [self.tableView reloadData];
            });
            NSUserDefaults *defaults =[NSUserDefaults standardUserDefaults];
            [defaults setBool:YES forKey:@"followView"];
            [defaults synchronize];
        } failure:^(NSError *error) {
            
        }];
        
    } else {
        
//#warning 更改成弹出层提示
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:NSLocalizedStringFromTable(@"Tip", @"InfoPlist", nil) message:NSLocalizedStringFromTable(@"Please login first", @"InfoPlist", nil) delegate:nil cancelButtonTitle:NSLocalizedStringFromTable(@"Cancel", @"InfoPlist", nil) otherButtonTitles:NSLocalizedStringFromTable(@"Yes", @"InfoPlist", nil), nil];
//        alert.alertViewStyle = UIAlertViewStyleLoginAndPasswordInput;
        alert.delegate = self;
        [alert show];
//        MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
//        hud.userInteractionEnabled = NO;
//        hud.mode = MBProgressHUDModeText;//"Please login first"="请先登录";
//        hud.label.text = NSLocalizedStringFromTable(@"Please login first", @"InfoPlist", nil);
//        [hud hideAnimated:YES afterDelay:2.f];
//        [self.tableView reloadData];
        
    }
}

- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
//    NSString* msg = [[NSString alloc] initWithFormat:@"您按下的第%ld个按钮！",(long)buttonIndex];
    if (buttonIndex == 1) {
        LoginViewController *loginVc = [[LoginViewController alloc] init];
        loginVc.tokenBlock = ^(NSString *token){
            NSUserDefaults *defaults =[NSUserDefaults standardUserDefaults];
            [defaults setObject:token forKey:@"token"];
            //获得UIImage实例
            [defaults synchronize];
            
            [self followMatch];
        };
        [loginVc setHidesBottomBarWhenPushed:YES];
        [self.navigationController pushViewController:loginVc animated:YES];
    }
}

- (void)setFollowMatch {
    
}


- (void)setUpTopView {
    MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    hud.userInteractionEnabled = NO;
    
    dispatch_async(dispatch_get_global_queue(QOS_CLASS_USER_INITIATED, 0), ^{
        [self doSomeWork];
    });
    
    [LSLikeSportTool getFootballBaseType:_type withMatchID:_matchID withCompleted:^(id result) {
        LSFootballBase *footballBase = [LSFootballBase mj_objectWithKeyValues:result];
        FootballBaseResult *baseResult = [FootballBaseResult mj_objectWithKeyValues:footballBase.result];
        
        LSBasketballBase *basketballBase = [LSBasketballBase mj_objectWithKeyValues:result];
        BasketResult *basketResult = [BasketResult mj_objectWithKeyValues:basketballBase.result];
        _basketResult = [BasketResult mj_objectWithKeyValues:basketballBase.result];
        _baseInfo = baseResult;
        
        // 标题
        UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, kSceenWidth, 40)];
        label.numberOfLines = 2;
        label.font = [UIFont systemFontOfSize:16];
        label.textAlignment = NSTextAlignmentCenter;
        label.textColor = [UIColor whiteColor];
        label.text = baseResult.matchtypefullname;
        self.navigationItem.titleView = label;
//        self.navigationItem.title = baseResult.matchtypefullname;
        
        // 获取主队图片
        NSString *taemSign = [NSString string];
        if (_type == 0) {
            taemSign = @"TeamSign";
        } else if (_type == 1){
            taemSign = @"TeamSign_BT";
        }
        NSString *hteamUrl = [[NSString alloc] initWithFormat:@"http://www.likesport.com/MPIC/%@/%li.jpg",taemSign,(long)baseResult.hteam_id];
        [_topView.hteamImage sd_setImageWithURL:[NSURL URLWithString:hteamUrl] placeholderImage:[UIImage imageNamed:@"img_default"]];
        _topView.hteamImage.contentMode =  UIViewContentModeScaleToFill;
        _topView.hteamImage.userInteractionEnabled=YES;
        UITapGestureRecognizer *hteamTap =[[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(didClickHteamImage)];
        [_topView.hteamImage addGestureRecognizer:hteamTap];
        
        NSString *cteamUrl = [[NSString alloc] initWithFormat:@"http://www.likesport.com/MPIC/%@/%li.jpg",taemSign,(long)baseResult.cteam_id];
        [_topView.cteamImage sd_setImageWithURL:[NSURL URLWithString:cteamUrl] placeholderImage:[UIImage imageNamed:@"img_default"]];
        _topView.cteamImage.contentMode =  UIViewContentModeScaleToFill;
        _topView.cteamImage.userInteractionEnabled=YES;
        UITapGestureRecognizer *cteamTap =[[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(didClickCteamImage)];
        [_topView.cteamImage addGestureRecognizer:cteamTap];

        NSUserDefaults *defaults =[NSUserDefaults standardUserDefaults];
//        NSString *token = [defaults objectForKey:@"token"];//根据键值取出token
        BOOL isPoint = [defaults boolForKey:@"point"];
        if (!isPoint) {
            UIView *point = [[UIView alloc] initWithFrame:CGRectMake(36, 0, 8, 8)];
            point.backgroundColor = [UIColor redColor];
            point.layer.cornerRadius = 5;
            [_topView.cteamImage addSubview:point];
            
            UIView *point2 = [[UIView alloc] initWithFrame:CGRectMake(36, 0, 8, 8)];
            point2.backgroundColor = [UIColor redColor];
            point2.layer.cornerRadius = 5;
            [_topView.hteamImage addSubview:point2];
        }
        
        
        if (_type == 0) {
            _topView.footballResult = baseResult;
        } else if (_type == 1 || _type == 2) {
            _topView.type = _type;
            _topView.basketballResult = basketResult;
        }
        
        if (_type == 0 && _baseInfo.is_follow_matchtype == 1) {
            _followBtn.highlighted = YES;
        } else if ((_type == 1 || _type == 2) && _basketResult.is_follow_matchtype == 1){
            _followBtn.highlighted = YES;
        } else {
            _followBtn.highlighted = NO;
        }
        [hud hideAnimated:YES];

        [self initHorizontalMenu];


    }failure:^(NSError *error) {
        [hud hideAnimated:YES];
//        self.label.text = [error localizedDescription];
    }];
}

-(void)savePoint{ // 小红点
    NSUserDefaults *defaults =[NSUserDefaults standardUserDefaults];
    [defaults setBool:YES forKey:@"point"];
    [defaults synchronize];
}

#pragma mark -- 点击图片跳转到球队详情
- (void)didClickHteamImage {
    [self savePoint];
    TeamInformationController *teamVC = [[TeamInformationController alloc] init];
    teamVC.type = _type;
    if (_type == 0) {
        teamVC.teamid = _baseInfo.hteam_id;
    } else if (_type == 1) {
        teamVC.teamid = _basketResult.hteam_id;
    }
    
    if (_type != 2) {
        [self.navigationController pushViewController:teamVC animated:YES];

    }
}

- (void)didClickCteamImage {
    [self savePoint];
    TeamInformationController *teamVC = [[TeamInformationController alloc] init];
    teamVC.type = _type;
    if (_type == 0) {
        teamVC.teamid = _baseInfo.cteam_id;
    } else if (_type == 1) {
        teamVC.teamid = _basketResult.cteam_id;
    }
    
    if (_type != 2) {
        [self.navigationController pushViewController:teamVC animated:YES];

    }
}

- (void)doSomeWorkWithProgress {
    self.canceled = NO;
    // This just increases the progress indicator in a loop.
    float progress = 0.0f;
    while (progress < 1.0f) {
        if (self.canceled) break;
        progress += 0.01f;
        dispatch_async(dispatch_get_main_queue(), ^{
            // Instead we could have also passed a reference to the HUD
            // to the HUD to myProgressTask as a method parameter.
            [MBProgressHUD HUDForView:self.navigationController.view].progress = progress;
        });
        usleep(50000);
    }
}

- (void)initHorizontalMenu {
    self.view.backgroundColor = [UIColor whiteColor];
    _allVC = [NSMutableArray array];
    DetailController *one = [[DetailController alloc]initWithNibName:nil bundle:nil];
    one.matchID = _matchID;
    one.type = _type;
    one.basketResult = _basketResult;

    one.title = NSLocalizedStringFromTable(@"Detail", @"InfoPlist", nil);
    [_allVC addObject:one];

    AnalyseController *two = [[AnalyseController alloc]initWithNibName:nil bundle:nil];
    two.matchID = _matchID;
    two.type = _type;
    two.title = NSLocalizedStringFromTable(@"Analyse", @"InfoPlist", nil);
    [_allVC addObject:two];
//    _detailController = two;

    
    WikiScoreController *three = [[WikiScoreController alloc]init];
//    three.matchID = _matchID;
//    three.wiki.match_id = _matchID;
//    three.wiki.mtype = _type;
    three.mtype = _type;
    three.mid = _matchID;
    three.title = NSLocalizedStringFromTable(@"Wiki", @"InfoPlist", nil);
    [_allVC addObject:three];

    
    CommentController *four = [[CommentController alloc]initWithNibName:nil bundle:nil];
    four.matchID = _matchID;
    four.type = _type;
    four.title = NSLocalizedStringFromTable(@"Comment", @"InfoPlist", nil);
    [_allVC addObject:four];
    
    
    self.segmentView.delegate = self;
    //可自定义背景色和tab button的文字颜色等
    //开始构建UI
    [_segmentView buildUI];
    //起始选择一个tab
    [_segmentView selectTabWithIndex:_state animate:NO];
    //显示红点，点击消失
//    [_segmentView showRedDotWithIndex:3];
}
#pragma mark - DBPagerTabView Delegate
- (NSUInteger)numberOfPagers:(SMPagerTabView *)view {
    return [_allVC count];
}
- (UIViewController *)pagerViewOfPagers:(SMPagerTabView *)view indexOfPagers:(NSUInteger)number {
    return _allVC[number];
}

//左右切换视图时
- (void)whenSelectOnPager:(NSUInteger)number;
{

}

#pragma mark - setter/getter
- (SMPagerTabView *)segmentView {
    if (!_segmentView) {
        self.segmentView = [[SMPagerTabView alloc]initWithFrame:CGRectMake(0, 40, self.view.width, self.view.height - 39)];
        [self.view addSubview:_segmentView];
    }
    return _segmentView;
}

-(LSTopView *)topView {
    if (!_topView) {
        _topView = [LSTopView topView];
        _topView.frame = CGRectMake(0, 0, kSceenWidth, 145);
        _topView.backgroundColor = LSBlue;
        
    }
    return _topView;
}

- (BasketResult *)basketResult {
    if (_basketResult) {
        _basketResult = [[BasketResult alloc] init];

    }
    return _basketResult;
}

// 设置导航条头居中，返回按钮中的文字不显示
- (void)setUpNavigationTitleCenter
{
    NSArray *viewControllerArray = [self.navigationController viewControllers];
    long previousViewControllerIndex = [viewControllerArray indexOfObject:self] - 1;
    UIViewController *previous;
    if (previousViewControllerIndex >= 0) {
        previous = [viewControllerArray objectAtIndex:previousViewControllerIndex];
        previous.navigationItem.backBarButtonItem = [[UIBarButtonItem alloc] initWithTitle:@"" style:UIBarButtonItemStylePlain target:self action:nil];
    }
}

// 没有数据时显示label
- (UILabel *)label {
    if (!_label) {
        UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake((kSceenWidth-220)/2 , 70, 220, 40)];
        label.textAlignment = NSTextAlignmentCenter;
        label.lineBreakMode = 2;
        label.text = NSLocalizedStringFromTable(@"Temporarily no data!", @"InfoPlist", nil);
        [self.view addSubview:label];
        [self.view insertSubview:label atIndex:1];
        _label = label;
    }
    return _label;
}

// 隐藏导航条下边的黑线
-(void)viewWillAppear:(BOOL)animated
{
    [self.navigationController.navigationBar setBackgroundImage:[UIImage new] forBarMetrics:UIBarMetricsDefault];
    [self.navigationController.navigationBar setShadowImage:[UIImage new]];
}

-(void)viewWillDisappear:(BOOL)animated{
    
    [self.navigationController.navigationBar setBackgroundImage:nil forBarMetrics:UIBarMetricsDefault];
    [self.navigationController.navigationBar setShadowImage:nil];
}

@end
